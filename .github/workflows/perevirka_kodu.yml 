name: ‚úÖ –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –∫–æ–¥—É (CI)

on:
  push:
    branches: [ "**" ]
  pull_request:
    branches: [ "**" ]
  workflow_dispatch:        # —Ä—É—á–Ω–∏–π –∑–∞–ø—É—Å–∫

jobs:
  lint:
    name: üîç –õ—ñ–Ω—Ç–∏–Ω–≥ (flake8)
    runs-on: ubuntu-latest
    steps:
      - name: ‚¨áÔ∏è –ö–ª–æ–Ω —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä—ñ—é
        uses: actions/checkout@v4

      - name: ‚öôÔ∏è –í—Å—Ç–∞–Ω–æ–≤–∏—Ç–∏ Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: üì¶ –í—Å—Ç–∞–Ω–æ–≤–∏—Ç–∏ –∑–∞–ª–µ–∂–Ω–æ—Å—Ç—ñ
        run: |
          pip install -r requirements.txt flake8

      - name: üö® –ó–∞–ø—É—Å—Ç–∏—Ç–∏ flake8
        run: |
          echo "‚ñ∂Ô∏è –°—Ç–∞—Ä—Ç –ª—ñ–Ω—Ç–∏–Ω–≥—É‚Ä¶" 
          flake8 .
          echo "‚úÖ –õ—ñ–Ω—Ç–∏–Ω–≥ –∑–∞–≤–µ—Ä—à–µ–Ω–æ –±–µ–∑ –ø–æ–º–∏–ª–æ–∫"

  types:
    name: üßê –°—Ç–∞—Ç–∏—á–Ω–∞ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Ç–∏–ø—ñ–≤ (mypy)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with: { python-version: '3.12' }
      - run: |
          pip install -r requirements.txt mypy
      - name: üîç mypy
        run: |
          echo "‚ñ∂Ô∏è –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —Ç–∏–ø–∏‚Ä¶" 
          mypy .
          echo "‚úÖ –¢–∏–ø–∏ –∫–æ—Ä–µ–∫—Ç–Ω—ñ"

  tests:
    name: üß™ –ú–æ–¥—É–ª—å–Ω—ñ —Ç–µ—Å—Ç–∏ (pytest)
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_USER: test
          POSTGRES_PASSWORD: test
          POSTGRES_DB: testdb
        ports: [ '5432:5432' ]
        options: >-
          --health-cmd "pg_isready -U test" --health-interval 10s
          --health-timeout 5s --health-retries 5
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with: { python-version: '3.12' }
      - run: |
          pip install -r requirements.txt pytest coverage
      - name: ‚ñ∂Ô∏è –ó–∞–ø—É—Å–∫ pytest
        run: |
          coverage run -m pytest -v
      - name: üìä –ó–≤—ñ—Ç Coverage
        run: |
          coverage xml -o coverage.xml
      - name: ‚òÅÔ∏è –ó–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ coverage —É Codecov
        uses: codecov/codecov-action@v4
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  build-image:
    name: üê≥ –õ–æ–∫–∞–ª—å–Ω–∞ –∑–±—ñ—Ä–∫–∞ Docker‚Äë–æ–±—Ä–∞–∑—É
    runs-on: ubuntu-latest
    needs: [ lint, types, tests ]
    steps:
      - uses: actions/checkout@v4
      - name: ‚ñ∂Ô∏è docker build
        run: |
          echo "üõ†Ô∏è –ë—É–¥—É—î–º–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä‚Ä¶"
          docker build -t myapp:test .
          echo "‚úÖ –ó–±—ñ—Ä–∫–∞ –ø—Ä–æ–π—à–ª–∞ —É—Å–ø—ñ—à–Ω–æ"
